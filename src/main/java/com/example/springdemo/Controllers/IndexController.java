package com.example.springdemo.Controllers;

import com.example.springdemo.Beans.Test;
import com.example.springdemo.Entity.Account;
import com.example.springdemo.Entity.Message;
import com.example.springdemo.Repo.MessageRepository;
import com.example.springdemo.Repo.AccountRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import java.util.HashMap;
import java.util.Map;

@Controller
public class IndexController {

    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private MessageRepository messageRepository;

    @Autowired
    private AccountRepository accountRepository;

    @Autowired
    private Test test;

//    private final VisitsRepository visitsRepository;
//
//    public IndexController(VisitsRepository visitsRepository) {
//        this.visitsRepository = visitsRepository;
//    }

    @GetMapping("/")
    public ModelAndView index() {
        Map<String, Object> model = new HashMap<>();
        model.put("name", "Alexey");
        model.put("massages",messageRepository.findAll());
        System.out.println(test.toString());
//        Visit visit = new Visit();
//        visit.description = String.format("Visited at %s", LocalDateTime.now());
//        visitsRepository.save(visit);

//        userRepository.findAll();

        return new ModelAndView("index", model);
    }


    @GetMapping("/accounts")
    public ModelAndView list() {
        Map<String, Object> model = new HashMap<>();
        model.put("accounts",accountRepository.findAll());
        return new ModelAndView("accounts/accounts", model);
    }

    @GetMapping("/add")
    public ModelAndView add() {
        Map<String, Object> model = new HashMap<>();
        model.put("accounts",accountRepository.findAll());
//        System.out.println("*** add ***");
        return new ModelAndView("accounts/add", model);
    }


    //  http://localhost:8080/add?name=First&email=someemail@someemailprovider.com
    @PostMapping(path="/addaccount")
    public String addAccount (
                @RequestParam String name
                ,@RequestParam String email) {
        Message m = new Message();
        m.setText("messege");

        Account account = new Account();
        account.setName(name);
        account.setEmail(email);
        account.getMessages().add(m);
        accountRepository.save(account);
//        messageRepository.save(m);
        //return list();
        return "redirect:accounts";
    }


    //  http://localhost:8080/add?name=First&email=someemail@someemailprovider.com
    @GetMapping(path="/add2") // Map ONLY GET Requests
    public @ResponseBody String addNewMessage (@RequestParam String name
            , @RequestParam String email) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Message m = new Message();
        m.setText("messege");

        Account account = new Account();
        account.setName(name);
        account.setEmail(email);
        account.getMessages().add(m);
        accountRepository.save(account);
//        messageRepository.save(m);
        return "Saved";
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<Message> getAllUsers() {
        // This returns a JSON or XML with the users
        return messageRepository.findAll();
    }
}
